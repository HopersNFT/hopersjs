/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export declare type ExecuteMsg = {
    receive: Cw20ReceiveMsg;
} | {
    unbond: {
        amount: Uint128;
        [k: string]: unknown;
    };
} | {
    withdraw: {
        [k: string]: unknown;
    };
} | {
    redeem: {
        [k: string]: unknown;
    };
} | {
    migrate_staking: {
        new_staking_contract: string;
        [k: string]: unknown;
    };
} | {
    update_config: {
        distribution_schedule: [number, number, Uint128][];
        [k: string]: unknown;
    };
} | {
    update_admin: {
        admin: string;
        [k: string]: unknown;
    };
} | {
    update_token_contract: {
        lp_token_contract: string;
        reward_token: Denom;
        [k: string]: unknown;
    };
} | {
    update_lock_duration: {
        lock_duration: number;
        [k: string]: unknown;
    };
};
export declare type Uint128 = string;
export declare type Binary = string;
export declare type Denom = {
    native: string;
} | {
    cw20: Addr;
};
export declare type Addr = string;
export interface Cw20ReceiveMsg {
    amount: Uint128;
    msg: Binary;
    sender: string;
    [k: string]: unknown;
}
export interface InstantiateMsg {
    distribution_schedule: [number, number, Uint128][];
    lock_duration: number;
    lp_token_contract: string;
    reward_token: Denom;
    [k: string]: unknown;
}
export declare type QueryMsg = {
    config: {
        [k: string]: unknown;
    };
} | {
    state: {
        block_time?: number | null;
        [k: string]: unknown;
    };
} | {
    staker_info: {
        staker: string;
        [k: string]: unknown;
    };
} | {
    all_stakers: {
        limit?: number | null;
        start_after?: string | null;
        [k: string]: unknown;
    };
} | {
    unbonding_info: {
        limit?: number | null;
        staker: string;
        start_after?: number | null;
        [k: string]: unknown;
    };
};
export declare type Decimal = string;
export interface State {
    global_reward_index: Decimal;
    last_distributed: number;
    total_bond_amount: Uint128;
    [k: string]: unknown;
}
export declare type HopersStakingExecuteMsg = ExecuteMsg;
